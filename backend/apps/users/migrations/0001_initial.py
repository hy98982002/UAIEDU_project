# Generated by Django 5.2 on 2025-06-16 07:37

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(help_text='用户的手机号，用于登录和验证', max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='请输入正确的手机号码格式', regex='^1[3-9]\\d{9}$')], verbose_name='手机号')),
                ('unique_identifier', models.CharField(editable=False, help_text='格式：uai{手机号}dx，dx为随机字符', max_length=50, unique=True, verbose_name='用户唯一标识')),
                ('nickname', models.CharField(help_text='用户可自定义的昵称，默认为唯一标识号', max_length=50, verbose_name='用户昵称')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='邮箱')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='注册时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_phone_verified', models.BooleanField(default=False, verbose_name='手机号是否已验证')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'users_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='主键ID')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('login_type', models.CharField(choices=[('phone_password', '手机密码登录'), ('phone_sms', '手机验证码登录'), ('wechat', '微信登录')], max_length=20, verbose_name='登录方式')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP地址')),
                ('user_agent', models.TextField(verbose_name='用户代理')),
                ('is_success', models.BooleanField(default=True, verbose_name='是否成功')),
                ('fail_reason', models.CharField(blank=True, max_length=100, verbose_name='失败原因')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='登录地点')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_logs', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '登录日志',
                'verbose_name_plural': '登录日志',
                'db_table': 'users_login_log',
                'ordering': ['-add_time'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='主键ID')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('real_name', models.CharField(blank=True, max_length=20, verbose_name='真实姓名')),
                ('gender', models.CharField(blank=True, choices=[('M', '男'), ('F', '女'), ('O', '其他')], max_length=1, verbose_name='性别')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('avatar', models.ImageField(blank=True, upload_to='avatars/%Y/%m/', verbose_name='头像')),
                ('qq', models.CharField(blank=True, max_length=15, verbose_name='QQ号')),
                ('wechat', models.CharField(blank=True, max_length=30, verbose_name='微信号')),
                ('province', models.CharField(blank=True, max_length=20, verbose_name='省份')),
                ('city', models.CharField(blank=True, max_length=20, verbose_name='城市')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='详细地址')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='个人简介')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '用户资料',
                'verbose_name_plural': '用户资料',
                'db_table': 'users_profile',
            },
        ),
        migrations.CreateModel(
            name='UserSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='主键ID')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='邮件通知')),
                ('sms_notifications', models.BooleanField(default=True, verbose_name='短信通知')),
                ('wechat_notifications', models.BooleanField(default=True, verbose_name='微信通知')),
                ('profile_public', models.BooleanField(default=True, verbose_name='资料公开')),
                ('learning_progress_public', models.BooleanField(default=False, verbose_name='学习进度公开')),
                ('preferred_language', models.CharField(choices=[('zh-cn', '简体中文'), ('zh-tw', '繁体中文'), ('en', 'English')], default='zh-cn', max_length=10, verbose_name='首选语言')),
                ('extra_settings', models.JSONField(blank=True, default=dict, verbose_name='扩展设置')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '用户设置',
                'verbose_name_plural': '用户设置',
                'db_table': 'users_settings',
            },
        ),
        migrations.CreateModel(
            name='WeChatBinding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='主键ID')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('openid', models.CharField(max_length=50, unique=True, verbose_name='微信OpenID')),
                ('unionid', models.CharField(blank=True, max_length=50, verbose_name='微信UnionID')),
                ('wechat_nickname', models.CharField(max_length=50, verbose_name='微信昵称')),
                ('wechat_avatar', models.URLField(blank=True, verbose_name='微信头像URL')),
                ('is_bound', models.BooleanField(default=True, verbose_name='是否已绑定')),
                ('bind_time', models.DateTimeField(auto_now_add=True, verbose_name='绑定时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wechat_binding', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '微信绑定',
                'verbose_name_plural': '微信绑定',
                'db_table': 'users_wechat_binding',
            },
        ),
    ]
